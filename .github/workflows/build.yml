name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master
      - develop

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  verify_accessibility_package:
    name: Accessibility package action
    runs-on: ubuntu-latest
    steps:
      - name: üê¶ Checkout
        uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: üì¶ Installing dependencies
        run: flutter pub get

      - name: ‚ú® Making sure the package is formatted
        run: dart format --set-exit-if-changed lib test

      - name: üîç Making sure that there are no analysis warnings or errors
        run: dart analyze --fatal-infos --fatal-warnings lib test

      - name: üß™ Test
        run: |
          if [ -d "test" ]; then
            flutter test --no-pub --test-randomize-ordering-seed random --coverage
          fi

      - name: üßπ Exclude Generated Code from Coverage
        run: |
          if [ -f "coverage/lcov.info" ]; then
            mv coverage/lcov.info coverage/lcov.info.bak
            sudo apt-get -y install lcov
            lcov --remove coverage/lcov.info.bak '**/*.g.dart' '**/generated/**' '**/locales/**' -o coverage/lcov.info --ignore-errors unused,unused
          fi

      - name: üì¶ Detect Package Name
        id: package
        run: echo "name=accessibility" >> $GITHUB_OUTPUT

      - name: ‚¨ÜÔ∏è Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ steps.package.outputs.name }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: coverage/lcov.info

      - name: üìä Verify Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: coverage/lcov.info
          exclude: '**/*.g.dart **/generated/** **/locales/**'
          min_coverage: 100

      - name: üíØ Verify Pub Score
        run: |
          dart pub global activate pana 0.22.17
          sudo apt-get install webp
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if [ -z "$1" ]; then MINIMUM_SCORE=TOTAL; else MINIMUM_SCORE=$1; fi
          if (( $SCORE < $MINIMUM_SCORE )); then echo "minimum score $MINIMUM_SCORE was not met!"; exit 1; fi

  verify_accessibility_example_basic:
    name: Flutter example basic
    needs: [verify_accessibility_package]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: example/basic
    steps:
      - name: üê¶ Checkout
        uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
            channel: 'stable'
        
      - name: üì¶ Installing dependencies
        run: flutter pub get
        
      - name: ‚ú® Making sure the package is formatted
        run: dart format --set-exit-if-changed .
        
      - name: üîç Making sure that there are no analysis warnings or errors
        run: flutter analyze --fatal-infos --fatal-warnings lib test
        
      - name: üß™ Running unit, widget and golden tests
        run: flutter test --coverage
        
      - name: üìä Making sure that code coverage is at least 80%
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 80
          path: example/basic/coverage/lcov.info

  verify_accessibility_example_with_custom_ui:
    name: Flutter example with custom ui
    needs: [verify_accessibility_package]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: example/with_custom_ui
    steps:
      - name: üê¶ Checkout
        uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
                
      - name: üì¶ Installing dependencies
        run: flutter pub get
                
      - name: ‚ú® Making sure the package is formatted
        run: dart format --set-exit-if-changed .
                
      - name: üîç Making sure that there are no analysis warnings or errors
        run: flutter analyze --fatal-infos --fatal-warnings lib

  verify_accessibility_example_with_multiple_languages:
    name: Flutter example with multiple languages
    needs: [verify_accessibility_package]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: example/with_multiple_languages
    steps:
      - name: üê¶ Checkout
        uses: actions/checkout@v5
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: üì¶ Installing dependencies
        run: flutter pub get

      - name: ‚ú® Making sure the package is formatted
        run: dart format --set-exit-if-changed .

      - name: üîç Making sure that there are no analysis warnings or errors
        run: flutter analyze --fatal-infos --fatal-warnings lib test

      - name: üß™ Running unit, widget and golden tests
        run: flutter test --coverage

      - name: üìä Making sure that code coverage is at least 80%
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 80
          path: example/with_multiple_languages/coverage/lcov.info
